{"version":3,"sources":["webpack:///./src/components/post-link.js","webpack:///./src/components/heroHeader.js","webpack:///./src/pages/index.js"],"names":["PostLink","post","className","to","frontmatter","path","thumbnail","src","alt","title","date","query","render","data","site","siteMetadata","home","description","href","target","pageQuery","IndexPage","Posts","allMarkdownRemark","edges","filter","e","node","template","map","edge","key","id","name","content","rel","sizes","type"],"mappings":"kNAoBeA,EAjBE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACf,6BAASC,UAAU,SACjB,kBAAC,IAAD,CAAMC,GAAIF,EAAKG,YAAYC,QACtBJ,EAAKG,YAAYE,WAClB,yBAAKC,IAAKN,EAAKG,YAAYE,UAAWE,IAAKP,EAAKG,YAAYK,MAAQ,qBAGxE,gCACE,wBAAIP,UAAU,cACZ,kBAAC,IAAD,CAAMC,GAAIF,EAAKG,YAAYC,KAAMH,UAAU,aACxCD,EAAKG,YAAYK,QAGtB,yBAAKP,UAAU,aAAaD,EAAKG,YAAYM,S,YCdpC,oBACb,kBAAC,IAAD,CACEC,MAAK,aAYLC,OAAQ,SAACC,GAAD,OACN,yBAAKX,UAAU,eACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,iBACb,yBAAKK,IAAI,qBAAqBC,IAAI,mBAEpC,yBAAKN,UAAU,wBACb,kDACA,2BAAIW,EAAKC,KAAKC,aAAaC,KAAKC,aAChC,uBAAGf,UAAU,cAAb,4FAE2B,IACzB,uBAAGgB,KAAK,qBAAqBC,OAAO,UAApC,UAEK,IALP,2HAtBV,UCiCWC,GADEC,UA5BG,SAAC,GAKZ,IAAD,IAJJR,KACEC,EAGE,EAHFA,KAIIQ,EADF,EAFFC,kBAAqBC,MAIpBC,QAAO,SAACC,GAAD,MAAuC,aAAhCA,EAAEC,KAAKvB,YAAYwB,YACjCC,KAAI,SAACC,GAAD,OAAU,kBAAC,EAAD,CAAUC,IAAKD,EAAKH,KAAKK,GAAI/B,KAAM6B,EAAKH,UAEzD,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,+BAAQb,EAAKC,aAAaN,OAC1B,0BAAMwB,KAAK,cAAcC,QAASpB,EAAKC,aAAaE,cACpD,0BAAMkB,IAAI,mBAAmBC,MAAM,UAAUlB,KAAK,iCAClD,0BAAMiB,IAAI,OAAOE,KAAK,YAAYD,MAAM,QAAQlB,KAAK,8BACrD,0BAAMiB,IAAI,OAAOE,KAAK,YAAYD,MAAM,QAAQlB,KAAK,+BAEvD,yBAAKhB,UAAU,cACb,kBAAC,EAAD,MACA,4CACA,yBAAKA,UAAU,SAASoB,MAOV,e","file":"component---src-pages-index-js-637032aa21b9718b7d95.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst PostLink = ({ post }) => (\n  <article className=\"card \">\n    <Link to={post.frontmatter.path}>\n      {!!post.frontmatter.thumbnail && (\n        <img src={post.frontmatter.thumbnail} alt={post.frontmatter.title + \"- Featured Shot\"} />\n      )}\n    </Link>\n    <header>\n      <h2 className=\"post-title\">\n        <Link to={post.frontmatter.path} className=\"post-link\">\n          {post.frontmatter.title}\n        </Link>\n      </h2>\n      <div className=\"post-meta\">{post.frontmatter.date}</div>\n    </header>\n  </article>\n)\nexport default PostLink\n","import React from \"react\";\nimport { StaticQuery, graphql, Link } from \"gatsby\";\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query HeadingQuery {\n        site {\n          siteMetadata {\n            home {\n              title\n              description\n            }\n          }\n        }\n      }\n    `}\n    render={(data) => (\n      <div className=\"hero-header\">\n        <div className=\"primary-content flex\">\n          <div className=\"primary-image\">\n            <img src=\"/assets/cutout.png\" alt=\"Jordan Haines\" />\n          </div>\n          <div className=\"primary-content-copy\">\n            <h1>üëãüèæ&nbsp;Hi I'm Jordan</h1>\n            <p>{data.site.siteMetadata.home.description}</p>\n            <p className=\"cool-links\">\n              During the day (and most nights) you can find me making students\n              better writers as CTO of{\" \"}\n              <a href=\"https://prompt.com\" target=\"_blank\">\n                Prompt\n              </a>{\" \"}\n              where I lead an engineering team that works in Django, Vue/Vuex,\n              React/Redux, and a slew of other really dope tech.\n            </p>\n          </div>\n        </div>\n      </div>\n    )}\n  />\n);\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport PostLink from \"../components/post-link\";\nimport HeroHeader from \"../components/heroHeader\";\n\nconst IndexPage = ({\n  data: {\n    site,\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  const Posts = edges\n    .filter((e) => e.node.frontmatter.template === \"BlogPost\")\n    .map((edge) => <PostLink key={edge.node.id} post={edge.node} />);\n\n  return (\n    <Layout>\n      <Helmet>\n        <title>{site.siteMetadata.title}</title>\n        <meta name=\"description\" content={site.siteMetadata.description} />\n        <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/assets/apple-touch-icon.png\" />\n        <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/assets/favicon-32x32.png\" />\n        <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/assets/favicon-16x16.png\" />\n      </Helmet>\n      <div className=\"page-index\">\n        <HeroHeader />\n        <h2>ü§î Musings &darr;</h2>\n        <div className=\"grids\">{Posts}</div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\nexport const pageQuery = graphql`\n  query indexPageQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        w3l_dom_key\n      }\n    }\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n            thumbnail\n            template\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}